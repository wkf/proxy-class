// Generated by CoffeeScript 1.6.3
(function() {
  var Proxy,
    __hasProp = {}.hasOwnProperty;

  Proxy = (function() {
    function Proxy(klass, wrap) {
      var _constructor;
      if (wrap == null) {
        wrap = this.wrap;
      }
      _constructor = this._buildProxyConstructor(klass, wrap);
      eval("this.klass = function " + klass.name + "() { _constructor.apply(this, arguments) }");
      this._wrapClassMethods(klass, wrap);
      return this.klass;
    }

    Proxy.prototype._buildProxyConstructor = function(klass, wrap) {
      return function() {
        var name, value, _ref;
        _ref = klass.prototype;
        for (name in _ref) {
          if (!__hasProp.call(_ref, name)) continue;
          value = _ref[name];
          if (value instanceof Function) {
            value = wrap.bind({
              context: this,
              wrapped: value,
              name: name
            });
          }
          this[name] = value;
        }
        return wrap.apply({
          context: this,
          wrapped: klass,
          name: 'constructor'
        }, arguments);
      };
    };

    Proxy.prototype._wrapClassMethods = function(klass, wrap) {
      var name, value, _results;
      _results = [];
      for (name in klass) {
        if (!__hasProp.call(klass, name)) continue;
        value = klass[name];
        if (value instanceof Function) {
          value = wrap.bind({
            context: this.klass,
            wrapped: value,
            name: "@" + name,
            constructor: this.constructor
          });
        }
        _results.push(this.klass[name] = value);
      }
      return _results;
    };

    Proxy.prototype.wrap = function() {
      return this.wrapped.apply(this.context, arguments);
    };

    return Proxy;

  })();

  module.exports = Proxy;

}).call(this);
